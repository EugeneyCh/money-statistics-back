openapi: 3.1.0
info:
  version: 1.0.0
  title: Spendy app
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  description: This is a documentation of Spendy app
tags:
  - name: Transactions
    description: Operations with transactions.
servers:
  - url: http://localhost:3000

paths:
  /summary:
    get:
      tags:
        - Transactions
      summary: Get stats for a given month
      operationId: getMonthlyStats
      description: >
        Returns aggregated financial statistics (income and expenses) by categories 
        and totals for the given month and year.
      security:
        - bearerAuth: []
      parameters:
        - name: period
          in: query
          required: true
          schema:
            type: string
            pattern: '^\d{4}-(0[1-9]|1[0-2])$'
            example: "2024-11"
          description: Period in YYYY-MM format.
      responses:
        "200":
          description: Aggregated statistics for the specified period.
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - data
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    required:
                      - totalIncome
                      - totalExpense
                      - categories
                    properties:
                      totalIncome:
                        type: number
                        format: float
                        example: 4200.00
                      totalExpense:
                        type: number
                        format: float
                        example: 3150.50
                      categories:
                        type: array
                        description: Aggregated values by category.
                        items:
                          type: object
                          required:
                            - type
                            - category
                            - total
                          properties:
                            type:
                              type: string
                              enum: [income, expense]
                              example: expense
                            category:
                              type: string
                              enum:
                                [
                                  Main expenses,
                                  Products,
                                  Car,
                                  Self care,
                                  Child care,
                                  Household products,
                                  Education,
                                  Leisure,
                                  Other expenses,
                                  Entertainment,
                                ]
                              example: Main expenses
                            total:
                              type: number
                              format: float
                              example: 520.75
        "400":
          description: Bad request (e.g., invalid period format)
          content:
            application/json:
              schema:
                $ref: ../swagger/components/responses/400.yaml
        "401":
          $ref: ../swagger/components/responses/401.yaml
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
